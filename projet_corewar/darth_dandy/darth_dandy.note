Rappel:
	Chaque ligne comporte 0x40 = 64 octets
	0x 00 00 01 00 = 256
	0x 00 01 00 00 = 65 536
	0x 01 00 00 00 = 16 777 216

	0x 10 00 00 00 = 268 435 456

	0b 00 00 00 11 = 2 + 1 = 3
	0b 00 00 11 00 = 8 + 4 = 12
	0b 00 11 00 00 = 32 + 16 = 48
	0b 11 00 00 00 = 128 + 64 = 192

Decaler le token de 2 octets (16 bits) vers le bit de poids fort :
	add r4 r1 r1
	add r4 r4 r4 -
	.            |
	.            | 15 fois
	.            |
	add r4 r4 r4 -

_____V1_____

La chaine a copier :
	0x 0b 54 02 03 0f (5 octets)
	sti r2 r3 r16
		- pour le premier champion :
										r2 vaut 190 054 915 (=0x 0b 54 02 03)
										r3 vaut 25 0x19
		- pour le deuxieme champion :
										r2 vaut (65 536 * 3 841 (=0x 0f 01)) = 251 723 776
										r3 vaut 29 0x1d
		- pour le troisieme champion :
										r2 vaut (65 536 * token) + ((256 * 9) + 1(=0x01) = 2 305)
										r3 vaut 33 0x21
		- pour le quatrieme champion :
										r2 vaut 118 * 16 777 216 = 1 979 711 488 (0x76 00 00 00)
										r3 vaut 37 0x25

	0x 01 00 00 00 2a ? (5 octets)
	live ?

	0x 09 00 0d (3 octets)
		- 'zjmp' prend en parametre un direct sur 2 octets
	zjmp 13 - sauter a (256 + 128 = 384) - 10 = 374 0x01 76

_____V2_____

	sti r2 r3 r16
		- pour le premier champion :
										r2 vaut :
												190 054 915 (=0x 0b 54 02 03)
										r3 vaut 25 (=0x 19)
		- pour le deuxieme champion :
										r2 vaut :
												(65 536 * 3 841 (=0x 0f 01)) = 251 723 776
												+ 65 535 (=0x ff ff)
												= 251 789 311 (=0x 0f 01 ff ff)
										r3 vaut 29 (=0x 1d)
		- pour le troisieme champion :
										r2 vaut :
												(65 536 * token) (token decale de 16 bits)
												+ ((256 * 9) = 2 304)
												+ 1(=0x01)
												= (token << 16) + 2 305 (=0x ff f? 09 01)
										r3 vaut 33 0x21
		- pour le quatrieme champion :
										r2 vaut :
												118 * 16 777 216 = 1 979 711 488 (0x76 00 00 00)
										r3 vaut 37 0x25

